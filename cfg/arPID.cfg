#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 上述两行是标准的Python脚本文件头，第一行指定解释器，第二行指定文件编码为UTF-8

PACKAGE = "simple_follower" # 定义包名，这将被用于生成参数的命名空间等

from dynamic_reconfigure.parameter_generator_catkin import * # 从dynamic_reconfigure包导入所有需要的类和函数，用于参数生成

# 创建一个 ParameterGenerator 实例，用于定义和生成动态可配置参数
gen = ParameterGenerator()

# 添加PID控制器及运动相关的参数
# 参数格式: gen.add(name, type, level, description, default_value, min_value, max_value)
# name: 参数名
# type: 参数类型 (double_t, int_t, str_t, bool_t)
# level: 参数级别 (通常为0，用于分组或指定回调级别)
# description: 参数的描述性文本
# default_value: 参数的默认值
# min_value: 参数的最小值 (可选)
# max_value: 参数的最大值 (可选)

# --- 线性运动P控制器参数 ---
# 前向运动的P比例增益 (P gain for linear forward movement)
gen.add("linearfront_p", double_t, 0, "P gain for linear forward control", 0.4, 0.0, 2.0)
# 后向运动的P比例增益 (P gain for linear backward movement)
gen.add("linearback_p", double_t, 0, "P gain for linear backward control", 0.5, 0.0, 2.0)

# --- 角向运动P控制器参数 ---
# 左转运动的P比例增益 (P gain for angular left turn control)
gen.add("angularleft_p", double_t, 0, "P gain for angular left turn control", 3.3, 0.0, 5.0)
# 右转运动的P比例增益 (P gain for angular right turn control)
gen.add("angularright_p", double_t, 0, "P gain for angular right turn control", 3.0, 0.0, 5.0)

# --- 距离保持参数 ---
# 可能用于控制与目标保持的距离的某个参数，或者PID控制器中的D参数 (Derivative gain or distance parameter)
# 描述为 "d_param"，具体含义需结合使用此参数的代码来确定，可能是目标跟随距离或PID的D项系数
gen.add("d_param", double_t, 0, "Target distance parameter or D gain for PID", 0.6, 0.0, 1.0)

# --- 速度限制参数 ---
# 最大角速度限制 (Maximum angular speed limit)
gen.add("max_angular_speed", double_t, 0, "Maximum angular speed (rad/s)", 0.5, 0.0, 1.0)
# 最小角速度限制 (通常为负的最大角速度，表示反方向) (Minimum angular speed limit / Max reverse angular speed)
gen.add("min_angular_speed", double_t, 0, "Minimum angular speed (rad/s, typically negative for reverse)", -0.5, -1.0, 1.0)

# 最大线速度限制 (Maximum linear speed limit)
gen.add("max_linear_speed", double_t, 0, "Maximum linear speed (m/s)", 0.2, 0.0, 1.0)
# 最小线速度限制 (通常为负的最大线速度，表示反方向) (Minimum linear speed limit / Max reverse linear speed)
gen.add("min_linear_speed", double_t, 0, "Minimum linear speed (m/s, typically negative for reverse)", -0.2, -1.0, 1.0)

# --- 目标点参数 (可能用于测试或特定模式下的固定目标点) ---
# 目标点的X坐标 (Goal position X coordinate)
gen.add("goal_x", double_t, 0, "Target goal X coordinate (meters)", 0.6, 0.0, 1.0)
# 目标点的Y坐标 (Goal position Y coordinate)
gen.add("goal_y", double_t, 0, "Target goal Y coordinate (meters)", 0.0, 0.0, 1.0) # Y坐标通常在简单跟随中为0，表示正前方

# 生成参数配置文件
# 第一个参数是包名 (PACKAGE)
# 第二个参数是节点名或生成文件的父名 (simple_follower)
# 第三个参数是生成的cfg文件的名字 (arPID)，最终会生成 arPIDConfig.h 等文件
exit(gen.generate(PACKAGE, "simple_follower", "arPID"))

