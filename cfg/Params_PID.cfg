#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 上述两行是标准的Python脚本文件头，第一行指定解释器，第二行指定文件编码为UTF-8

PACKAGE = "simple_follower" # 定义包名，这将被用于生成参数的命名空间等

from dynamic_reconfigure.parameter_generator_catkin import * # 从dynamic_reconfigure包导入所有需要的类和函数，用于参数生成

# 创建一个 ParameterGenerator 实例，通常变量名用 gen 或者 pg，这里用了 vfp (Vision Follower Params?)
gen = ParameterGenerator() # 将 vfp 改为 gen 以保持一致性，如果原始代码中其他地方也用vfp，则应保持vfp

# 添加PID控制器参数，这些参数可能用于控制机器人的角速度和线速度
# 参数格式: gen.add(name, type, level, description, default_value, min_value, max_value)
# 注释中 “default , maximum , minimum” 的顺序与 gen.add 的参数顺序 (default, min, max) 不符，以 gen.add 为准。

# --- 角速度PID参数 (Angular Speed PID) ---
# 角速度 P (Proportional) 增益
gen.add("speed_ap",  double_t, 0, "Angular Speed P Gain",  1.4, 0.0, 3.0) # 默认值1.4, 最小值0.0, 最大值3.0

# 角速度 I (Integral) 增益
gen.add("speed_ai",  double_t, 0, "Angular Speed I Gain", 0.0, -1.0, 1.0) # 默认值0.0, 最小值-1.0, 最大值1.0

# 角速度 D (Derivative) 增益
gen.add("speed_ad",  double_t, 0, "Angular Speed D Gain", 0.03, -1.0, 1.0) # 默认值0.03, 最小值-1.0, 最大值1.0

# --- 线速度PID参数 (Linear Speed PID) ---
# 线速度 P (Proportional) 增益
gen.add("speed_vp",  double_t, 0, "Linear Speed P Gain",  0.4, 0.0, 0.8) # 默认值0.4, 最小值0.0, 最大值0.8

# 线速度 I (Integral) 增益
gen.add("speed_vi",  double_t, 0, "Linear Speed I Gain",  0.0, -0.05, 0.05) # 默认值0.0, 最小值-0.05, 最大值0.05

# 线速度 D (Derivative) 增益
gen.add("speed_vd",  double_t, 0, "Linear Speed D Gain",  0.0, -0.05, 0.05) # 默认值0.0, 最小值-0.05, 最大值0.05

# 生成参数配置文件
# 第一个参数是包名 (PACKAGE)
# 第二个参数是节点名或生成文件的父名 (simple_follower)
# 第三个参数是生成的cfg文件的名字 (Params_PID)，最终会生成 Params_PIDConfig.h 等文件
exit(gen.generate(PACKAGE, "simple_follower", "Params_PID"))

